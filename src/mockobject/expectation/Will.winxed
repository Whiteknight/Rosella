namespace Rosella { namespace MockObject { namespace Expectation
{
    /* Class to contain information about what an expectation will do, once
       matched.
    */
    class Will
    {
        var value;

        function Will(var value)
        {
            self.value = value;
        }

        function execute()
        {
            using Rosella.Error.must_subclass;
            must_subclass("Rosella.MockObject.Expectation.Will");
        }
    }

    namespace Will
    {
        class Return : Rosella.MockObject.Expectation.Will
        {
            function Return(var p [slurpy]) { self.Will(p:[flat]); }

            function execute()
            {
                return self.value;
            }
        }

        class Throw : Rosella.MockObject.Expectation.Will
        {
            function Throw(var p [slurpy]) { self.Will(p:[flat]); }

            function execute()
            {
                throw self.value;
            }
        }

        class Do : Rosella.MockObject.Expectation.Will
        {
            function Do(var p [slurpy]) { self.Will(p:[flat]); }

            function execute()
            {
                var sub = self.value;
                return sub();
            }
        }
    }
}}}
