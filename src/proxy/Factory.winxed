namespace Rosella { namespace Proxy
{
    class Factory
    {
        var target_class;
        var proxy_class;
        var builders;

        function BUILD(var target_type, var builders)
        {
            using Rosella.get_type_class;
            using Rosella.Proxy.add_proxy_class_private_attr;

            self.target_class = get_type_class(target_type);
            self.builders = builders;
            self.proxy_class = new 'Class';
            add_proxy_class_private_attr(self.proxy_class, "proxy_controller");
            add_proxy_class_private_attr(self.proxy_class, "proxy_factory");
            add_proxy_class_private_attr(self.proxy_class, "target_class");
            for (var builder in self.builders)
                builder.setup_proxy_class(self.target_class, self.proxy_class);
        }

        function get_proxy(var controller)
        {
            using Rosella.Proxy.set_proxy_private_attr;

            var proxy = null;
            var proxy_class = self.proxy_class;
            ${ new proxy, proxy_class };
            set_proxy_private_attr(proxy, "proxy_factory", self);
            set_proxy_private_attr(proxy, "proxy_controller", controller);
            set_proxy_private_attr(proxy, "target_class", self.target_class);
            for (var builder in self.builders)
                builder.setup_proxy_object(proxy, controller);
            controller.initialize_proxy(proxy);
            return proxy;
        }
    }
}}
