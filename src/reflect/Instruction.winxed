class Rosella.Reflect.Instruction
{
    var pc;
    var opcode;
    var args;

    function Instruction(int pc, var opcode, var args)
    {
        self.pc = pc;
        self.opcode = opcode;
        self.args = args;
    }

    function name()
    {
        return self.opcode.family_name();
    }

    // TODO: Add an accessor to get the long name

    function get_string()
    {
        string parts[] = [string(self.name())];
        for (int i = 0; i < elements(self.args); i++)
            parts[i + 1] = self.args[i].get_string();
        return join(" ", parts);
    }

    // TODO: Add either a subclass or additional accessors to read information
    // from set_args, get_params and family.

    // TODO: Add an accessor to re-compile the op back into an array of integer
    // values (possibly using a new opmap)
}

