/* Data Node
    Take a key, and insert the context contents from that key into the
    output stream
*/
class Rosella.Template.Node.Data : Rosella.Template.Node
{
    // Constructor.
    function Data(string contents, string type) { self.Node(contents, type); }

    // Get the value from the context and push it onto the output stream
    function render(var engine, var context, var builder)
    {
        string key = Rosella.String.trim(self.contents);
        string value = context.get_value(key);
        push(builder, value);
    }

    // Compile to Winxed code
    function to_winxed(var engine, var builder)
    {
        string key = Rosella.String.trim(self.contents);
        string code = <<:
    push(__BUILDER__, __CONTEXT__.get_value('%s'));
:>>
;
        code = Rosella.String.sprintf(code, key);
        push(builder, code);
    }
}
