namespace Rosella
{
    /* TAP Harness class. Contains a list of TestFile objects and executes
       each in a loop. The Harness keeps statistics about the test run, and
       passes them off to other routines for display and analysis.

       Harness is the Controller object in the MVC system. Harness::View is
       the view which displays to the user, and Harness::Results is the model.
    */
    class Harness
    {
        // Constructor. Set up a basic set of loaders.
        function BUILD()
        {
            using Rosella.build;
        }

        /* Routines for Running the Harness
        */

        function default_view()
        {
            using Rosella.build;
            return build(class Rosella.Harness.View);
        }

        // Run the harness. Optionally take a custom view, and a handful of
        // other named options.
        function run(var test_run, var view,
                int run_inline [named,optional],  int has_ri [opt_flag],
                int line_length [named,optional], int has_ll [opt_flag])
        {
            using Rosella.build;

            if (!has_ri)
                run_inline = 0;
            if (!has_ll)
                line_length = 0;
            return self.run_internal(test_run, view, run_inline);
        }

        // Interal routine to run the harness
        function run_internal(var test_run, var view, int run_inline)
        {

            for (var test in test_run.tests()) {
                view.start_test(test);
                test.run(run_inline);
                test_run.update_test_stats(test);
                view.end_test(test);
            }
            test_run.mark_completed();
            view.test_run_complete(test_run);
            return test_run.run_was_success();
        }

        function reset()
        {
            self.test_run = build(class Rosella.Harness.TestRun);
        }
    }
}
