namespace Rosella { namespace Harness { namespace TestFile
{
    class Line
    {
        var result;
        var number;
        var name;
        var ignore;
        var todo;

        function BUILD(string line)
        {
            self.result = 0;
            self.number = -1;
            self.name   = "";
            self.ignore = 0;
            self.todo   = 0;
            if (self.can_ignore(line)) {
                self.ignore = 1;
                return;
            }
            self.parse_line(line);
        }

        function can_ignore(string line)
        {
            if (length(line) < 2)
                return 1;
            if (substr(line, 0, 1) == "#")
                return 1;
            int idx = indexof(line, "ok");
            if (idx != 0 && idx != 4)
                return 1;
            return 0;
        }

        function parse_line(string line)
        {
            var parts = split("#", line);
            var result = null;
            ${ shift result, parts };
            if (int(parts) > 0)
                self.parse_comment(parts[0]);
            self.parse_result(result);
        }

        function parse_comment(string comment)
        {
            if (indexof(comment, "TODO") != -1)
                self.todo = 1;
        }

        function parse_result(string result)
        {
            var line_parts = split("ok ", result);
            if (line_parts[0] == 'not ') {
                self.result = 0;
                self.name = split(' - ', result)[1];
            }
            else {
                self.result = 1;
            }
            self.number = split(' ', line_parts[1])[0];
        }

        function ignore() { return self.ignore; }

        function success() { return self.result; }

        function number() { return self.number; }

        function name() { return self.name; }

        function todo() { return self.todo; }
    }
}}}
