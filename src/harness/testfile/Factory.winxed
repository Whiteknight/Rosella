/* TestFile Factory Class
    Load TestFile objects from a list of files or a list of directories.
    The exact type of TestFile object to load is selectable.
*/
class Rosella.Harness.TestFile.Factory : Rosella.ObjectFactory
{
    /* Public API Functions
    */

    function Factory(var testfile_type)
    {
        self.ObjectFactory(testfile_type);
    }

    // Make a suitable TestFile object for the given file.
    function create_typed(var type, string filename)
    {
        if (type == null)
            type = self.target_type;
        return Rosella.construct(type, filename);
    }

    // Return a list of TestFile objects from a list of directories.
    // Search through those directories, possibly recursively, for a list
    // of files which appear to be tests.
    function create_tests_from_dirs(var test_type, var dirs, int recurse)
    {
        return Rosella.Query.iterable(dirs)
            .map(function(d) { return new Rosella.FileSystem.Directory(d); })
            .map(function(dir) {
                if (recurse)
                    return dir.walk_func(function(file) { return file; });
                else
                    return dir.get_files();
            })
            .flatten()
            .filter(function(f) { return f.path_object().extension() == "t"; })
            .map(function(f) { return self.create_typed(test_type, string(f)); });
    }

    // Return a list of TestFile objects from a list of files. Do not do
    // any detection or sanity checking, all files in the list are
    // assumed to be valid test files for this loader.
    function create_tests_from_files(var test_type, var filenames)
    {
        return Rosella.Query.iterable(filenames)
            .tap(function(filename) {
                if (!Rosella.FileSystem.is_file(filename))
                    Rosella.Error.error("file '%s' does not exist or is not a file", filename);
            })
            .map(function(filename) { return self.create_typed(test_type, filename); });
    }
}
