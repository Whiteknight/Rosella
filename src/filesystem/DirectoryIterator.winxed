/* Directory Entry Iterator
    Iterates over all entries in a directory
*/
class Rosella.FileSystem.DirectoryIterator : Rosella.IteratorBase
{
    // Constructor, take a Directory object
    function DirectoryIterator(var directory)
    {
        self.DirectoryIterator(string(directory));
    }

    // Constructor, take a string path name
    function DirectoryIterator(string dirname)
    {
        var raw = Rosella.FileSystem.get_os_pmc().readdir(dirname);
        var filtered = [];
        for (string entry in raw) {
            if (entry == "." || entry == "..")
                continue;
            push(filtered, dirname + entry);
        }
        self.data = filtered;
    }

    // Get the name of the next entry
    function shift_string[vtable]()
    {
        return string(self.data.shift());
    }

    // Get an Entry object for the next entry
    function shift_pmc[vtable]()
    {
        string entry_str = self.data.shift();
        return Rosella.FileSystem.Entry.get_entry(entry_str);
    }
}
