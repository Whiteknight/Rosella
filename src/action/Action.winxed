namespace Rosella
{
    /* An Action is a bundled command which can be packed up and executed
       later. Actions are used to prepare commands or sequences of commands
       for use in deferred execution.

       Every Action takes an object and possibly some additional arguments.
       The action is performed on the object. Argument objects can be used
       to dynamically create a list of arguments for each invocation of the
       Action.
    */
    class Action
    {
        var method;
        var args;

        /* Constructor
        */

        function Action(var method, var args = [])
        {
            if (method == null)
                Rosella.Error.invalid(__FUNCTION__, "Subroutine is null");
            self.method = method;
            Rosella.Action.Argument.verify_all_arguments(__FUNCTION__, args);
            self.args = args;
        }

        /* Public Functions
        */

        // Convert the list of Argument objects into an array of positional
        // arguments and a hash of named arguments. In addition to the
        // pre-defined Argument objects, take an optional list of Argument
        // overrides.
        function prepare_args(var pos, var named, var overrides = null)
        {
            for (var arg in self.args)
                arg.resolve_to(pos, named);
            if (overrides != null) {
                Rosella.Action.Argument.verify_all_arguments(__FUNCTION__, overrides);
                for (var override in overrides)
                    override.resolve_to(pos, named);
            }
        }

        // Execute the action on the given object. Take an optional list of
        // Argument overrides to change the default behavior.
        function execute(var obj,
                var overrides = [])
        {
            var pos = [];
            var named = {};
            self.prepare_args(pos, named, overrides);
            self.execute_initializer(obj, pos, named);
        }

        // Perform the actual action. This must be done in a subclass.
        function execute_initializer(var obj, var pos, var named)
        {
            Rosella.Error.must_subclass(__CLASS__);
        }
    }
}
