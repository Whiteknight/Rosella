namespace Rosella { namespace Test
{
    namespace Testcase
    {
        function test(var testproto,
                var loaderproto [named,optional], int has_lp [opt_flag])
        {
            var loader;
            using Rosella.build;
            if (has_lp)
                loader = build(loaderproto);
            else
                loader = build(class Rosella.Test.Loader);

            var suite = loader.load_tests_from_testcase(testproto);
            using Rosella.get_type_name;
            suite.run();
        }
    }

    class Testcase
    {
        var todo;
        var verify;
        var name;
        var num_tests;

        function BUILD(string name)
        {
            self.name = name;
            self.todo = null;
            self.verify = null;
            self.num_tests = 1;
        }

        function __set_up() { }

        function __tear_down() { }

        # Provide an alternate text to display on output
        function verify(string verify)
        {
            self.verify = verify;
        }

        function todo(string todo)
        {
            self.todo = todo;
        }

        function unimplemented(string msg)
        {
            using Assert.fail;
            self.todo(msg);
            fail("Unimplemented: " + string(self.name));
        }
    }
}}
