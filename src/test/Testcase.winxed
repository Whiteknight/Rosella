namespace Rosella { namespace Test
{
    /* The Testcase. Tests are methods on the Testcase. When we run the Suite,
       each test method is given its own instance of Testcase and run by
       itself.

       To add tests, you must subclass Testcase
    */
    // TODO: Major Refactor. Testcase -> TestContext and TestCase. Tests
    //       no longer need to inherit from Testcase. Instead the tests can be
    //       any class. We extract the method objects from the test class and
    //       execute them as a method on the TestCase. The TestCase will have
    //       a TestContext object as a read-only attribute. TestContext will
    //       contain metadata like todo, verify, name, status, persistant
    //       data, etc.
    class Testcase
    {
        var todo;
        var verify;
        var name;

        // Constructor. Take the name of the method this instance should run
        function BUILD(string name)
        {
            self.name = name;
            self.todo = null;
            self.verify = null;
        }

        // Optional setup routine, if needed. Executed before each test method
        function __set_up() { }

        // Optional tear-down routine, if needed. Executed after each test
        // method
        function __tear_down() { }

        // Provide an alternate text to display on output
        function verify(string verify)
        {
            self.verify = verify;
        }

        // Mark the test as TODO, with a message
        function todo(string todo)
        {
            self.todo = todo;
        }

        // Mark the test as being unimplemented. This is TODO+fail
        function unimplemented(string msg)
        {
            using Assert.fail;
            self.todo(msg);
            fail("Unimplemented: " + string(self.name));
        }
    }
}}
