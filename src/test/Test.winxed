namespace Rosella
{
    /* The Rosella Test Library
        This library is used to implement unit tests, although not a test
        harness. By default, the test library produces TAP output, although
        that and much other behavior can be overridden by subclassing
    */
    namespace Test
    {
        // Setup and run a test using Testcase-based tests. This is basically
        // a thin facade over SuiteFactory and Suite with some defaults thrown
        // in. Returns 1 if the test was a success, 0 otherwise.
        function test(var test_type,
                var suite_type [named,optional],  int has_sp [opt_flag],
                var testcase_type [named,optional], int has_tc [opt_flag],
                var context [named,optional], int has_c [opt_flag])
        {
            using Rosella.build;

            if (!has_sp)
                suite_type = class Rosella.Test.Suite;
            if (!has_tc)
                testcase_type = class Rosella.Test.TestCase;
            if (!has_c)
                context = build(class Rosella.Test.TestContext);

            var suitefactory = build(class Rosella.Test.SuiteFactory,
                    suite_type, test_type, testcase_type, context);
            var suite = suitefactory.create();
            var result = suite.run();
            return result.was_successful();
        }

        // Unconditional fail. Throws a Rosella.Test.Failure
        // This is for internal use only. You probably want Asserter.fail
        // instead.
        function internal_fail(string why, int is_internal, var exception)
        {
            using Rosella.build;
            var ex = build(class Rosella.Test.Failure, why, exception, is_internal);
            ex.throw();
        }
    }
}
