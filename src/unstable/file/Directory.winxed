$include_const "src/unstable/file/Constants.pasm";

namespace Rosella { namespace File
{
    namespace Directory
    {
        function current_directory()
        {
            using Rosella.File.get_os_pmc;
            string cwd = get_os_pmc().cwd();
            return new Rosella.File.Directory(cwd);
        }
    }

    class Directory
    {
        var path;

        function Directory(string path)
        {
            self.path = path;
        }

        function exists()
        {
            using Rosella.File.get_os_pmc;
            get_os_pmc().exists(self.path);
        }

        function delete(int recursive [optional], int has_r [opt_flag])
        {
            // TODO
        }

        function create()
        {
            using Rosella.File.get_os_pmc;
            var os = get_os_pmc();
            if (!os.exists(self.path))
                os.mkdir(self.path, 0);
        }

        function rename(string new_path)
        {
            using Rosella.File.get_os_pmc;
            get_os_pmc().rename(self.path, new_path);
            self.path = new_path;
        }

        function get_files()
        {
            using Rosella.File.get_os_pmc;
            var file_names = get_os_pmc().readdir(self.path);
            var files = [];
            using Rosella.File.is_file;
            for (string file_name in file_names) {
                if (is_file(file_name))
                    push(files, new Rosella.File.File(file_name));
            }
            return files;
        }

        function get_subdirectories()
        {
            using Rosella.File.get_os_pmc;
            var names = get_os_pmc().readdir(self.path);
            var dirs = [];
            using Rosella.File.is_directory;
            for (string name in names) {
                if (is_directory(name))
                    push(dirs, new Rosella.File.Directory(name));
            }
            return dirs;
        }

        function get_iter[vtable]()
        {
            // TODO
        }
    }
}}
