class Rosella.Genetic.Mutator.Asexual : Rosella.Genetic.Mutator
{
    var mutator;
    var include_winners;

    function Asexual(var generator, var mutator, int include_winners)
    {
        self.generator = generator;
        self.mutator = mutator;
        self.include_winners = include_winners;
    }

    function get_next_generation(var winners, int num_cells)
    {
        var cells = [];
        int num_winners = 0;
        if (int(self.include_winners))
            num_winners = self.include_winners(cells, winners, num_cells);
        self.fill_next_generation(cells, winners, num_winners, num_cells);
        return cells;
    }

    function fill_next_generation(var cells, var winners, int existing_count, int total_count)
    {
        int num_winners = elements(winners);
        if (num_winners != 0) {
            var rand = Rosella.Random.default_uniform_random();
            for (int i = existing_count; i < total_count; i++) {
                int cell_idx = rand.get_range(0, num_winners);
                cells[i] = self.mutate(winners[cell_idx]);
            }
        } else
            self.create_initial_cells(cells, total_count);
    }

    function mutate(var cell)
    {
        var m = self.mutator;
        var d = m(cell.data());
        var c = new Rosella.Genetic.Cell(d);
        return c;
    }
}
