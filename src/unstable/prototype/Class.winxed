namespace Rosella { namespace Prototype
{
    class Object
    {
        function find_method[vtable](string name)
        {
            var n = name;
            return function(var obj, var p [slurpy], var n [slurpy,named])
            {
                var f = null;
                var mytype;
                ${ typeof mytype, self };
                f = mytype.find_method(n);
                if (f == null) {
                    var proto;
                    ${ getprop proto, 'prototype', mytype };
                    if (proto != null)
                        f = find_method(proto, n);
                }
                if (f == null) {
                    using Rosella.Error.invalid;
                    invalid("Prototype.PrototypeClass", "method not found: " + string(n));
                }
                return obj.*f(p:[flat], n:[flat,named]);
            };
        }

        //function get_attr_str[vtable] (string name)
        //{
            // Get the MRO
            // Search for an attribute of the given name in each class that
            //      isn't this class
            // Fall back to searching the prototype otherwise
            // TODO: Should we be caching stuff?
        //}

        //function set_attr_str[vtable] (string name, var value)
        //{
        //}
    }
}}

/*
function main()
{
    // Create a class
    var cl = createclass();

    // Instantiate
    var obj1 = new cl;

    // Define and redefine a method
    obj1['test'] = function() { say('test'); };
    obj1.test();
    obj1['test'] = function() { say('test2'); };
    obj1.test();

    // Get the method
    var x = obj1['test'];
    x();

    // Define a method in the prototype
    obj1['proto']['test3'] = function() { say('test3'); };
    obj1.test3();

    // Define it in the instance
    obj1['test3'] = function() { say('test4'); };
    obj1.test3();

    // Create a new instance and use the method in the prototype
    var obj2 = new cl;
    obj2.test3();

    // Call a non existent method
    obj2.notsuchmethod();
}
*/

// End
