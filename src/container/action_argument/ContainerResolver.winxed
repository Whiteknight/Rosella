namespace Rosella { namespace Action { namespace Argument
{
    /* An action type which uses the Container to resolve the value.
    */
    class ContainerResolver : Rosella.Action.Argument
    {
        var container;
        var type;

        function ContainerResolver(var container, var type, var args [slurpy,named])
        {
            if (type == null || container == null)
                Rosella.Error.invalid(__FUNCTION__, "container and type may not be null");
            int is_container = 0;
            ${ can is_container, container, "resolve" };
            if (!is_container)
                Rosella.Error.invalid(__FUNCTION__, "container argument is not a valid Container");
            self.container = container;
            self.type = type;
            self.setup_positioning(args:[flat,named]);
        }

        // Resolve the value from the container
        function resolve_value()
        {
            return self.container.resolve(self.type);
        }
    }
}}}
