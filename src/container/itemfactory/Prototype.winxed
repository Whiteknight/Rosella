namespace Rosella { namespace Container { namespace ItemFactory
{
    /* An ItemFactory to resolve from a prototype by cloning. This uses the
       basic Parrot clone op.
    */
    class Prototype : Rosella.Container.ItemFactory
    {
        var prototype;

        function Prototype(var proto, var inits)
        {
            if (proto == null) {
                using Rosella.Error.invalid;
                invalid("Container.ItemFactory.Prototype",
                    "Prototype object may not be null"
                );
            }
            self.prototype = proto;
            self.protected_method_initializers(inits);
        }

        // Clone the prototype and return the clone
        function protected_resolve_instance()
        {
            var object = null;
            var prototype = self.prototype;
            ${ clone object, prototype };
            return object;
        }
    }
}}}
