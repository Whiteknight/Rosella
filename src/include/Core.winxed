/* Forward declarations
*/
namespace Rosella {
    // src/core/Rosella.winxed
    extern function get_winxed_compiler;
    extern function alloc;
    extern function build;
    extern function construct;
    extern function get_type_name;
    extern function get_type_class;
    extern function isa_type;
    extern function find_named_method;
    extern function invoke_method;
    extern function get_unique_count;
    extern function load_bytecode_file;
    extern function unload_bytecode;
    extern function register_bytecode;

    // src/core/Error.winxed
    namespace Error
    {
        extern function error;
        extern function must_subclass;
        extern function not_implemented;
        extern function invalid;
        extern function invalid_type;
        extern function throw_error;
    }

    // src/core/Function.winxed
    namespace Function
    {
        extern function bind;
        extern function bind_method;
        extern function once;
        extern function after;
        extern function wrap;
        extern function compose;
    }

    // src/core/Globals.winxed
    namespace Globals
    {
        extern function get_global;
        extern function autoget_global;
        extern function register_global;
        extern function get_default_factory;
    }

    // src/core/IO.winxed
    namespace IO
    {
        extern function swap_handles;
        extern function sayf;
        extern function printf;
    }

    // src/core/ObjectFactory.winxed
    class ObjectFactory;

    // src/core/IteratorBase.winxed
    class IteratorBase;

    // src/core/Parrot.winxed
    namespace Parrot
    {
        extern function get_config_hash;
        extern function get_backtrace_strings;
        extern function get_backtrace_ex_strings;
        extern function try_report;
        extern function format_frame;
        extern function format_backtrace;
    }

    // src/core/Version.winxed
    namespace Version
    {
        extern function get_version_hash;
        extern function get_version;
    }
    class Version;

    // src/core/StringFormatter.winxed
    namespace StringFormatter
    {
        extern function type_formatters;
        extern function register_type_formatter;
        extern function role_formatters;
        extern function register_role_formatter;
        extern function get_formatter;
    }
    class StringFormatter;
}

/* Load the Library
*/

function __load_core[anon, load, init]()
{
    var core = load_packfile("rosella/core.pbc");
    if (!core.is_initialized("load")) {
        core.mark_initialized("load");
        var subs = core.subs_by_tag("load");
        for (var sub in subs)
            sub();
    }
}
