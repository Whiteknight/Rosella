namespace Rosella
{
    /* Common error routines */
    namespace Error
    {
        // Error that we are using an abstract parent method or class when we
        // are expected to be using a subclass
        function must_subclass(string caller)
        {
            throw_error("(%s) : You must use a subclass instead", caller);
        }

        // Error that we are attempting to use a feature which is not
        // implemented yet.
        function not_implemented(string func)
        {
            throw_error("(%s) : Not implemented", func);
        }

        // Error when we are attempting an invalid operation
        function invalid(string caller, string msg)
        {
            throw_error("Invalid Operation in %s: %s", caller, msg);
        }

        // Error when we are using an invalid type in an operation
        function invalid_type(string caller, var wanted_type, var type)
        {
            using Rosella.get_type_name;
            throw_error("Invalid Type in %s: Expected %s, have %s",
                caller, get_type_name(wanted_type), get_type_name(type)
            );
        }

        // Thow a rosella error
        function throw_error(string msg, var args [slurpy])
        {
            string real_msg = sprintf(msg, args);
            die("Rosella " + real_msg);
        }
    }
}
