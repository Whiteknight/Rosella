$include "src/date/Includes.winxed";

/* Special Date Class
    This class represents certain special dates which are not real dates.
*/
class Rosella.Date.SpecialDate : Rosella.Date
{
    var name;

    // Constructor. SpecialDate takes the normal representation values and a
    // name that is supposed to be unique throughout the system
    function SpecialDate(string name, int year, int month, int day, int hour, int min, int sec)
    {
        int raw[] = [sec, min, hour, day, month, year, -1, -1, 0];
        self.time_array = raw;
        self.name = name;
    }

    /* Operations
        You cannot perform operations on special dates
    */

    function add_seconds(int x)
    {
        Rosella.Error.error("Cannot modify SpecialDate");
    }

    function to_total_seconds()
    {
        Rosella.Error.error("SpecialDate does not have total seconds");
    }

    function add_minutes(int x)
    {
        Rosella.Error.error("Cannot modify SpecialDate");
    }

    function add_hours(int x)
    {
        Rosella.Error.error("Cannot modify SpecialDate");
    }

    function add_days(int x)
    {
        Rosella.Error.error("Cannot modify SpecialDate");
    }

    function add_months(int x)
    {
        Rosella.Error.error("Cannot modify SpecialDate");
    }

    function add_years(int x)
    {
        Rosella.Error.error("Cannot modify SpecialDate");
    }

    function week_day()
    {
        Rosella.Error.error("SpecialDate does not have day-of-week");
    }

    function week_day_name()
    {
        Rosella.Error.error("SpecialDate does not have day-of-week");
    }

    function date()
    {
        Rosella.Error.error("SpecialDate cannot be disected");
    }

    function time()
    {
        Rosella.Error.error("SpecialDate cannot be disected");
    }

    // Get the name of the SpecialDate
    function name()
    {
        return string(self.name);
    }

    function equals(var d)
    {
        return (d instanceof Rosella.Date.SpecialDate) && d === self;
    }

    function compare_to(var d)
    {
        Rosella.Error.must_subclass(__CLASS__);
    }
}

/* Minimum Date
    This date is the minimum date value. It is guaranteed to compare lower than
    all dates except itself
*/
class Rosella.Date.SpecialDate.Minimum : Rosella.Date.SpecialDate
{
    function Minimum()
    {
        self.SpecialDate("DATE_MINIMUM", 0, 0, 0, 0, 0, 0);
    }

    function compare_to(var d)
    {
        if (d === self)
            return 0;
        return -1;
    }
}

/* Maximum Date
    This date is the maximum date value. It is guaranteed to compare higher
    than all dates except itself
*/
class Rosella.Date.SpecialDate.Maximum : Rosella.Date.SpecialDate
{
    function Maximum()
    {
        self.SpecialDate("DATE_MAXIMUM", 9999, 0, 0, 0, 0, 0);
    }

    function compare_to(var d)
    {
        if (d === self)
            return 0;
        return 1;
    }
}
