function main[main]()
{
    load_bytecode("rosella/benchmark.pbc");
    using Rosella.Benchmark.benchmark;

    load_bytecode("rosella/memoize.pbc");

    var nonproxy = benchmark(function() {
        using Rosella.Memoize.memoize;
        using static add_one;
        var memo_add_one = memoize(add_one);

        int x = 5000;
        for (int i = 0; i < 10000; i++)
            x = memo_add_one(x);
        say("final value: " + string(x));
    });
    display_result("10,000 calls with non-proxy memoizer", nonproxy);

    var withproxy = benchmark(function() {
        using static add_one;
        using Rosella.Memoize.memoize_proxy;
        var memo_add_one = memoize_proxy(add_one);

        int x = 5000;
        for (int i = 0; i < 10000; i++)
            x = memo_add_one(x);
        say("final value: " + string(x));
    });

    withproxy.set_base_time(nonproxy.time());
    display_result("10,000 calls with proxy memoizer", withproxy);
}

function add_one(int i) {
    return i + 1;
}

function display_result(string name, var result)
{
    print(name);
    print(" - ");
    say(result);
}
